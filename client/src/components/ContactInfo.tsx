import { motion } from "framer-motion";
import { Mail, MapPin, Linkedin, Github } from "lucide-react";

const ContactInfo = () => {
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1
      }
    }
  };

  const itemVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: {
      opacity: 1,
      y: 0,
      transition: { duration: 0.5 }
    }
  };

  return (
    <section id="contact" className="py-20 bg-primary relative overflow-hidden">
      {/* Enhanced background decorations */}
      <div className="absolute right-0 bottom-0 w-96 h-96 bg-accent/10 rounded-full blur-3xl"></div>
      <div className="absolute left-1/4 top-1/2 w-80 h-80 bg-purple-800/10 rounded-full blur-3xl"></div>
      <div className="absolute left-0 top-0 w-64 h-64 bg-blue-800/10 rounded-full blur-3xl"></div>
      <div className="absolute right-1/4 top-1/3 w-72 h-72 bg-indigo-800/5 rounded-full blur-3xl"></div>
      
      <div className="container mx-auto px-4 relative z-10">
        <motion.div
          className="relative mb-16 text-center"
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.5 }}
        >
          <div className="absolute left-1/2 transform -translate-x-1/2 top-0 w-40 h-px bg-gradient-to-r from-transparent via-accent to-transparent"></div>
          <h2 className="text-3xl md:text-5xl font-heading font-bold mt-6 mb-8 flex flex-col md:flex-row items-center justify-center gap-2">
            <span>Get In</span> 
            <span className="bg-purple-600 text-white font-black px-4 py-2 rounded-md shadow-lg text-4xl md:text-6xl tracking-wider rotate-1 transform hover:rotate-0 transition-transform duration-300">TOUCH</span>
          </h2>
          <p className="text-center text-neutral/70 mb-6 max-w-2xl mx-auto">
            Have a project in mind or want to discuss potential opportunities? Feel free to reach out.
          </p>
          <div className="absolute left-1/2 transform -translate-x-1/2 -bottom-4 w-20 h-px bg-gradient-to-r from-transparent via-accent to-transparent"></div>
        </motion.div>
        
        <div className="flex flex-col md:flex-row gap-10 max-w-5xl mx-auto">
          <motion.div 
            className="w-full bg-gradient-to-br from-secondary/20 to-dark/80 backdrop-blur-md rounded-xl p-8 shadow-lg border border-accent/20"
            variants={containerVariants}
            initial="hidden"
            whileInView="visible"
            viewport={{ once: true }}
          >
            <motion.div className="mb-8" variants={itemVariants}>
              <h3 className="text-xl font-semibold mb-6 pb-2 border-b border-accent/30">
                <span className="bg-gradient-to-r from-accent to-purple-400 bg-clip-text text-transparent">Contact Information</span>
              </h3>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-5">
                <div className="flex items-center p-3 rounded-lg bg-dark/30 hover:bg-dark/40 transition-colors group">
                  <div className="w-12 h-12 flex items-center justify-center bg-gradient-to-br from-accent/60 to-accent/30 text-white rounded-full mr-4 shadow-md group-hover:shadow-accent/20 transition-all">
                    <Mail className="h-5 w-5" />
                  </div>
                  <div>
                    <p className="text-sm text-neutral/70 mb-1">Email</p>
                    <p className="font-medium">baningphilip1@gmail.com</p>
                  </div>
                </div>
                <div className="flex items-center p-3 rounded-lg bg-dark/30 hover:bg-dark/40 transition-colors group">
                  <div className="w-12 h-12 flex items-center justify-center bg-gradient-to-br from-accent/60 to-accent/30 text-white rounded-full mr-4 shadow-md group-hover:shadow-accent/20 transition-all">
                    <MapPin className="h-5 w-5" />
                  </div>
                  <div>
                    <p className="text-sm text-neutral/70 mb-1">Location</p>
                    <p className="font-medium">Grambling, Louisiana, USA</p>
                  </div>
                </div>
                <div className="flex items-center p-3 rounded-lg bg-dark/30 hover:bg-dark/40 transition-colors group">
                  <div className="w-12 h-12 flex items-center justify-center bg-gradient-to-br from-accent/60 to-accent/30 text-white rounded-full mr-4 shadow-md group-hover:shadow-accent/20 transition-all">
                    <Linkedin className="h-5 w-5" />
                  </div>
                  <div>
                    <p className="text-sm text-neutral/70 mb-1">LinkedIn</p>
                    <a 
                      href="https://linkedin.com/in/pabaning" 
                      target="_blank" 
                      rel="noopener noreferrer" 
                      className="font-medium hover:text-accent transition-colors"
                    >
                      linkedin.com/in/pabaning
                    </a>
                  </div>
                </div>
                <div className="flex items-center p-3 rounded-lg bg-dark/30 hover:bg-dark/40 transition-colors group">
                  <div className="w-12 h-12 flex items-center justify-center bg-gradient-to-br from-accent/60 to-accent/30 text-white rounded-full mr-4 shadow-md group-hover:shadow-accent/20 transition-all">
                    <Github className="h-5 w-5" />
                  </div>
                  <div>
                    <p className="text-sm text-neutral/70 mb-1">GitHub</p>
                    <a 
                      href="https://github.com/Alanperry1" 
                      target="_blank" 
                      rel="noopener noreferrer" 
                      className="font-medium hover:text-accent transition-colors"
                    >
                      github.com/Alanperry1
                    </a>
                  </div>
                </div>
              </div>
            </motion.div>
            
            <motion.div variants={itemVariants} className="flex justify-center">
              <h3 className="text-xl font-semibold mb-6 pb-2 border-b border-accent/30">
                <span className="bg-gradient-to-r from-accent to-purple-400 bg-clip-text text-transparent">Connect With Me</span>
              </h3>
              <div className="flex justify-center space-x-5 ml-6">
                <a 
                  href="https://linkedin.com/in/pabaning" 
                  target="_blank" 
                  rel="noopener noreferrer" 
                  className="w-12 h-12 flex items-center justify-center bg-gradient-to-br from-accent/80 to-purple-600/80 text-white rounded-full shadow-lg hover:shadow-accent/30 hover:scale-110 transition-all duration-300"
                  aria-label="LinkedIn profile"
                >
                  <Linkedin size={22} />
                </a>
                <a 
                  href="https://github.com/Alanperry1" 
                  target="_blank" 
                  rel="noopener noreferrer" 
                  className="w-12 h-12 flex items-center justify-center bg-gradient-to-br from-accent/80 to-purple-600/80 text-white rounded-full shadow-lg hover:shadow-accent/30 hover:scale-110 transition-all duration-300"
                  aria-label="GitHub profile"
                >
                  <Github size={22} />
                </a>
                <a 
                  href="mailto:baningphilip1@gmail.com" 
                  className="w-12 h-12 flex items-center justify-center bg-gradient-to-br from-accent/80 to-purple-600/80 text-white rounded-full shadow-lg hover:shadow-accent/30 hover:scale-110 transition-all duration-300"
                  aria-label="Send email"
                >
                  <Mail size={22} />
                </a>
              </div>
            </motion.div>
          </motion.div>
        </div>
      </div>
    </section>
  );
};

export default ContactInfo;